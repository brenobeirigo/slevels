{
  "instance_description": "Tests cases currently used in paper (with more flexible time cuts and larger graphs), 1h from 18h, region centers from max waiting (150). RELU - 128 hidden layers, simple embedding with 100 it, rebal4",
  "instance_name": "RELUsaved",
  "server_url": "http://localhost:5001",
  "result_folder": "./analysis/data/results/ELU1X/",
  "instances_folder": "./analysis/data/results/ELU1X/",
  "distances_file": "./data/nyc/processed/network/distance/dist_matrix_m.csv",
  "zone_data_file": "./data/nyc/processed/taxi_zones/manhattan_taxi_zones.csv",
  "durations_file": "./data/nyc/processed/network/distance/dist_matrix_duration_s.csv",
  "adjacency_matrix_file": "./data/nyc/processed/network/adjacency_matrix.csv",
  "requests_file": "./data/nyc/processed/trip_records/2019-2-yellow-Manhattan-00-00-00-23-59-59.csv",
  "network_node_info_file": "./data/nyc/processed/network/nodeset_gps.json",
  "precalculated_permutations_file": "./data/permutations/processed/precalculated_pudo_permutations_requests=4_passengers=4.dat",
  "learning_config": [
    {
      "folder_models": "mnt/d/projects/dev/mobio/notebooks/nyc/model/nn/saved_models",
      "learning_rate": [
        0.1
      ],
      "discount_factor": [
        0.5
      ],
      "request_samples": [0],
      "request_samples_doc": "Number of times requests are sampled (n. of episodes = request_samples * len(episode_start_time))",
      "training_frequency": [30],
      "training_frequency_doc": "Execute experience replay every 'training_frequency' number of new experiences collected",
      "experience_replay": {
        "size_experience_replay_buffer": [500],
        "size_experience_replay_buffer_doc": "An experience is collected at each time step. Then, 5 dates x 10 request samples x 30 steps = 1500 experiences",
        "size_experience_replay_batch": [32]
      },
      "target_network": {
        "update_frequency": [30],
        "update_frequency_doc": "Model is updated after 'update_frequency' number of experiences collected."
      },
      "training_config": {
        "weekday_datetime": [
          "2019-02-01 16:00:00",
          "2019-02-04 16:00:00",
          "2019-02-05 16:00:00",
          "2019-02-06 16:00:00",
          "2019-02-07 16:00:00",
          "2019-02-08 16:00:00",
          "2019-02-11 16:00:00",
          "2019-02-12 16:00:00",
          "2019-02-13 16:00:00",
          "2019-02-14 16:00:00",
          "2019-02-15 16:00:00",
          "2019-02-18 16:00:00",
          "2019-02-19 16:00:00",
          "2019-02-20 16:00:00",
          "2019-02-21 16:00:00",
          "2019-02-22 16:00:00",
          "2019-02-25 16:00:00",
          "2019-02-26 16:00:00",
          "2019-02-27 16:00:00"
        ],
        "data": [
          "./data/nyc/processed/trip_records/20190204170000-20190204190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv",
          "./data/nyc/processed/trip_records/20190205170000-20190205190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv",
          "./data/nyc/processed/trip_records/20190206170000-20190206190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv",
          "./data/nyc/processed/trip_records/20190207170000-20190207190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv",
          "./data/nyc/processed/trip_records/20190208170000-20190208190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv"
        ],
        "episode_start_datetime": [
          "2019-02-04 17:00:00",
          "2019-02-05 17:00:00",
          "2019-02-06 17:00:00",
          "2019-02-07 17:00:00",
          "2019-02-08 17:00:00"
        ]
      },
      "testing_config": {
        "episode_start_datetime": [
          "2019-02-20 17:00:00"
        ],
        "data": [
          "./data/nyc/processed/trip_records/20190220170000-20190220190000_2019-2-yellow-Manhattan-00-00-00-23-59-59.csv"
        ]
      }
    }
  ],
  "scenario_config": {
    "batch_duration": [
      60
    ],
    "earliest_time": [
      "2019-02-04 00:00:00"
    ],
    "time_config": [
      {
        "request_sampling_horizon": 3600,
        "total_simulation_horizon": 3600,
        "time_window": 60
      }
    ],
    "max_time_to_reach_region_center": 150,
    "max_requests": [
      10
    ],
    "percentage_requests": [
      0.08
    ],
    "shortest_path_method": [
      "shortest_path_astar"
    ],
    "initial_fleet": [
      20
    ],
    "max_capacity": [
      4
    ],
    "rebalance": [
      true
    ],
    "contract_duration": [
      0
    ],
    "allow_request_displacement": [
      true
    ],
    "allow_vehicle_hiring": [
      false
    ],
    "service_rate": {
      "S0": {
        "B": 1.0
      }
    },
    "customer_segmentation": {
      "BB": {
        "B": 1
      }
    },
    "service_level": {
      "B": {
        "priority": 2,
        "pk_delay_target": 300,
        "pk_delay": 300,
        "trip_delay": 300,
        "sharing_preference": 1
      }
    }
  },
  "hiring_config": [
    {
      "name": "method_hire_from_regional_center"
    }
  ],
  "matching_config": [
    {
      "name": "optlearn",
      "pd_generation_strategy": {
        "name": "pd_permutation",
        "max_sequences": 150
      },
      "learning": {
        "n_episodes": 100
      },
      "mip_time_limit": 240,
      "mip_gap": 0.01,
      "max_edges_rv": 5,
      "max_edges_rr": 5,
      "rtv_vehicle_timeout": 0.01,
      "rtv_max_vehicle_capacity": 4,
      "rejection_penalty": 5,
      "bad_service_penalty": 1,
      "allow_hiring": false,
      "objectives": [
        "obj_requests_plus_vfs",
        "obj_total_waiting"
      ]
    },
    {
      "name": "method_optimal",
      "pd_generation_strategy": {
        "name": "pd_permutation",
        "max_sequences": 150
      },
      "mip_time_limit": 240,
      "mip_gap": 0.01,
      "max_edges_rv": 5,
      "max_edges_rr": 5,
      "rtv_vehicle_timeout": 0.01,
      "rtv_max_vehicle_capacity": 4,
      "rejection_penalty": 5,
      "bad_service_penalty": 1,
      "allow_hiring": false,
      "objectives": [
        "obj_rejection",
        "obj_total_waiting"
      ]
    }
  ],
  "objective_options": [
    "obj_number_of_hired_and_violations",
    "obj_hierarchical_rejection",
    "obj_hierarchical_slack",
    "obj_hierarchical_rejection_service_level",
    "obj_hierarchical_hiring_and_rejection_service_level",
    "obj_number_of_hired",
    "obj_hierarchical_service_level",
    "obj_total_waiting",
    "obj_rejection",
    "obj_hierarchical_waiting_and_rejection",
    "obj_hierarchical_waiting",
    "obj_total_waiting_and_rejection",
    "obj_requests_plus_vfs"
  ],
  "shortest_path_method_options": [
    "shortest_path_dijkstra",
    "shortest_path_astar"
  ],
  "method_options": [
    "method_optimal",
    "method_greedy",
    "method_fsfc",
    "method_optimal_enforce_sl",
    "method_optimal_enforce_sl_and_hire"
  ],
  "rebalancing_config": [
    {
      "name": "rebalance_optimal_alonso_mora"
    }
  ],
  "labels": {
    "BA": "batch_duration",
    "RH": "request_sampling_horizon",
    "ST": "simulation_time",
    "MR": "max_requests",
    "PR": "percentage_requests",
    "IF": "initial_fleet",
    "MC": "max_capacity",
    "RE": "rebalance",
    "CD": "contract_duration",
    "SD": "allow_service_deterioration",
    "VH": "allow_vehicle_hiring",
    "SR": "service_rate",
    "CS": "customer_segmentation",
    "MO": "allow_many_to_one",
    "RT": "reinsert_targets",
    "CT": "clear_target_list_every_round",
    "UR": "allow_urgent_relocation",
    "IN": "instance_name",
    "ID": "instance_description",
    "HE": "rebalance_heuristic",
    "OPT": "matching",
    "HC": "maximal_hiring_delay",
    "DT": "start_datetime"
  }
}